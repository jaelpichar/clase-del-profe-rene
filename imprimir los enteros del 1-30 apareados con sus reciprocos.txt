

section .data
    msg db "Numero: ", 0
    msg2 db ", Reciproco: ", 0

section .bss
    num resb 4
    reciprocal resb 16

section .text
    global _start

_start:
    mov ecx, 1

loop_start:
    ; Imprimir número
    mov eax, ecx
    add eax, '0'
    mov [num], eax
    mov eax, 4
    mov ebx, 1
    mov edx, 1
    int 0x80

    ; Imprimir mensaje
    mov eax, 4
    mov ebx, 1
    mov ecx, msg2
    mov edx, 14
    int 0x80

    ; Aquí va el cálculo del recíproco, que es complicado en ensamblador

    add ecx, 1
    cmp ecx, 31
    jl loop_start

    mov eax, 1
    xor ebx, ebx
    int 0x80
